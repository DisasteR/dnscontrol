#!/bin/bash

##########################################################################
## Purpose
## This File is part of dnscontrol.
## dnscontrol is a script collection to manage a Bind DNS server farm.
## Using one master and 1 or more slaves

##########################################################################
## Copyright (C) 2015 DisasteR
## https://github.com/DisasteR/dnscontrol
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##########################################################################

# Get installation Directory
SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	# if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
BASEDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
CFGDIR=${BASEDIR%%/bin}
CFG=${CFGDIR}/dnscontrol.cfg
ZONEDIR=${BASEDIR%%bin}zones

. $CFG
. $BASEDIR/common

need_root

if [ $# -ne 1 ];
then
	usage
	exit 1
fi
DOMAIN=$1
if ! validate_domain $DOMAIN
then
	echo "Domain is not Valid."
	usage
	exit 1
fi

# Check if zone exist
if ${GREP} -wq ${DOMAIN} "${CFGDIR}/named.conf.master-zones" "${CFGDIR}/named.conf.slaves-zones";
then
	if ${GREP} -wq ${DOMAIN} "${CFGDIR}/named.conf.master-zones"
	then 
		FILE=`${GREP} -w ${DOMAIN} "${CFGDIR}/named.conf.master-zones" | ${AWK} -F\" '/file/ { print $2 }'`
		echo "
Master zone already exist in named.conf.master-zones using zone file : ${FILE}
Use editzone script.
"
	fi
	if ${GREP} -wq ${DOMAIN} "${CFGDIR}/named.conf.slaves-zones";
	then
		echo "
Slave zone already exist in named.conf.slaves-zones
"
	fi
	exit 1;
fi


# Add Zone to Master file.
cat >> "${CFGDIR}/named.conf.master-zones" <<EOFM
## Zone ${DOMAIN}
zone "${DOMAIN}" {
	type master;
	file "${ZONEDIR}/${DOMAIN}";
};

EOFM

# Add Zone to Slave file.
cat >> "${CFGDIR}/named.conf.slaves-zones" <<EOFS
## Zone ${DOMAIN}
zone "${DOMAIN}" {
	type slave;
	file "${SLAVES_CACHE_DIR}/${DOMAIN}";
	masters { ${MASTER_IP}; };
};

EOFS

if [[ -f "${ZONEDIR}/${DOMAIN}" ]]
then
	echo "
Zone File exist Keeping It.
"
else
	# Generate base zone file.
	SERIAL="$(date +%Y%m%d)01"
	
	DOMAIN_NS=`for NS in ${MASTER_NS} ${SLAVES_NS}; do echo "			NS	${NS}."; done`
	DOMAIN_MX=`for MX in ${DEFAULT_DOMAIN_MX}; do echo "			MX	${MX%|*} ${MX#*|}."; done`
    DOMAIN_XMPP=""
    if [ "" != "${DEFAULT_DOMAIN_JABBER}" ]
    then
        DOMAIN_XMPP=`echo "; XMPP
_xmpp-client._tcp   SRV 5 0 5222 ${DEFAULT_DOMAIN_JABBER}.
_xmpp-server._tcp   SRV 5 0 5269 ${DEFAULT_DOMAIN_JABBER}."`
    fi

	
	cat > "${ZONEDIR}/${DOMAIN}" <<EOF
\$TTL ${DEFAULT_DOMAIN_TTL}
${DOMAIN}.		IN SOA	${MASTER_NS}. ${DEFAULT_DOMAIN_CONTACT//@/.}. (
				${SERIAL}  ; serial
				${DEFAULT_DOMAIN_REFRESH}
				${DEFAULT_DOMAIN_RETRY}
				${DEFAULT_DOMAIN_EXPIRE}
				${DEFAULT_DOMAIN_MINIMUM}
				)
; NS
${DOMAIN_NS}

; MX
${DOMAIN_MX}

; SPF
			TXT	 "${DEFAULT_DOMAIN_SPF}"
			SPF	 "${DEFAULT_DOMAIN_SPF}"

$DOMAIN_XMPP

; Records
\$ORIGIN ${DOMAIN}.
${DEFAULT_DOMAIN_RECORD}
EOF

fi

# SSH to SLAVES
for SLAVES in $SLAVES_IP
do
	${SCP} ${SSH_PARAMS} "${CFGDIR}/named.conf.slaves-zones" ${SSH_USER}@${SLAVES}:${SSH_PATH}
done

echo -e "
-----------------------------------------------------------------------------
The domain \e[1m${DOMAIN}\e[0m has been installed on this server
-----------------------------------------------------------------------------

Now, you should:

* edit the zone file:
\e[31;1meditzone ${DOMAIN}\e[0m

* reload the nameserver configuration:
\e[31;1mreloaddns\e[0m

"

# Check if we are under git Management.
# TODO
